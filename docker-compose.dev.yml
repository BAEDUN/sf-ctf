services:
  client:
    build:
      context: .
      dockerfile: ./client/dockerfile.dev
    ports:
      - 1234:1234
    volumes:
      - ./client/src:/client/src
      - ./client/tsconfig.json:/client/tsconfig.json
      - ./client/package.json:/client/package.json
      - ./client/package-lock.json:/client/package-lock.json
    depends_on:
      - server

  server:
    build:
      context: .
      dockerfile: ./server/dockerfile.dev
    environment:
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - ./server/src:/server/src
      - ./server/package-lock.json:/server/package-lock.json
      - ./server/package.json:/server/package.json
      - ./server/tsconfig.json:/server/tsconfig.json
    depends_on:
      - db
    #   - storage

  nginx:
    image: nginx:1.23.1-alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/config/dev/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/config/dev/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client
      - server

  # storage:
  #   image: minio:RELEASE.2022-09-22T18-57-27Z
  #   restart: always
  #   environment:
  #     -
  #     - MINIO_ROOT_USER: ${MINIO_ROOT_USER}
  #     - MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  #   ports:
  #     - 9000:9000
  #     - 9001:9001
  #   volumes:
  #     - ./data/minio:/data

  db:
    image: mongo:6.0.1
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - ./data/mongodb:/data/db
