services:
  client:
    build:
      context: ./client
      dockerfile: dockerfile
    volumes:
      - clientDist:/client/dist

  server:
    build:
      context: ./server
      dockerfile: dockerfile
    restart: unless-stopped
    environment:
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - SERVER_ROOT_USER=${SERVER_ROOT_USER}
      - SERVER_ROOT_PASSWORD=${SERVER_ROOT_PASSWORD}
      - START_AT=${START_AT}
      - END_AT=${END_AT}
    expose:
      - "3000:3000"
    depends_on:
      - db
      - storage

  nginx:
    image: nginx:1.23.1-alpine
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx/config/prod/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/config/prod/default.conf:/etc/nginx/conf.d/default.conf
      - clientDist:/clientDist
    depends_on:
      - client
      - server

  storage:
    image: minio/minio:RELEASE.2022-09-22T18-57-27Z
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    expose:
      - 9000:9000
    volumes:
      - ./data/minio:/data
    command: server /data

  initStorage:
    image: minio/mc:RELEASE.2022-10-09T21-10-59Z
    depends_on:
      - storage
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add storage http://storage:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb storage/file --ignore-existing;
      "

  db:
    image: mongo:6.0.1
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    expose:
      - 27017:27017
    volumes:
      - ./data/mongodb:/data/db

volumes:
  clientDist:
